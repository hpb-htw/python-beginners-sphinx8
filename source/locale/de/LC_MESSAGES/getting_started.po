# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2012â€“2014, OpenTechSchool and contributors
# This file is distributed under the same license as the Introduction to
# Programming with Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Introduction to Programming with Python \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-05-19 11:05+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: de\n"
"Language-Team: de <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../source/getting_started.rst:2 e1b19baf91a84a4baf666b99653fe1a4
msgid "Getting started"
msgstr ""

#: ../../source/getting_started.rst:5 bfa3187e69674ae8a5ff62eaaa618f7d
msgid "What you'll need"
msgstr ""

#: ../../source/getting_started.rst:8 f6ad7a77968e43c6800ffabfbdeb85eb
msgid "A Python!"
msgstr ""

#: ../../source/getting_started.rst:10 5d5aa3665c434e4a9ffa2a1021fe9d48
msgid ""
"If you haven't yet got python, the latest official installation packages "
"can be found here:"
msgstr ""

#: ../../source/getting_started.rst:13 9ca520aaa2ab4bc0b89f788c6140d3b9
msgid "http://python.org/download/"
msgstr ""

#: ../../source/getting_started.rst:15 305b2c643c2f4ac48e212ef2cbe5fa55
msgid "Python 3 is preferable, being the newest version out!"
msgstr ""

#: ../../source/getting_started.rst:19 99c6a89a290f4b179afb90c76eb7c899
msgid ""
"On Windows, you'll need to add :program:`Python` to your ``%PATH%``, so "
"it can be found by other programs."
msgstr ""

#: ../../source/getting_started.rst:22 f304a2c3291a42ce92f3504e2df12f1e
msgid ""
"When installing Python 3.5 or later, there should be tick box option to "
"do this on the first page of the installer. Make sure you tick this on."
msgstr ""

#: ../../source/getting_started.rst:25 7ba95f288ce84c568bda79f7554e876b
msgid ""
"Otherwise, you can run the script under "
":file:`\\Tools\\Scripts\\win_add2path.py` where you installed Python."
msgstr ""

#: ../../source/getting_started.rst:29 d9f4c3a5976d47d1b97c42c0a25cf0cf
msgid "And a Code Editor"
msgstr ""

#: ../../source/getting_started.rst:31 0e9a9566a9e247dbb1a2036429984bff
msgid ""
"A code editor helps with reading and writing programming code. There are "
"many around, and it is one of the most personal choices a programmer can "
"make - Like a tennis-player choosing their racket, or a chef choosing "
"their favourite knife. To start off with, you'll just want a basic, easy-"
"to-use one that doesn't get in your way, but is still effective at "
"writing python code. Here are some suggestions for those:"
msgstr ""

#: ../../source/getting_started.rst:38 982a6fb8a7e6420f85e0552c11c45b1b
msgid ""
"`Atom`_: Windows, Mac & Linux. A new code editor made by Github. It's an "
"open-source project and is very easy to add functionality for, with its "
"packages system."
msgstr ""

#: ../../source/getting_started.rst:42 f05e0ba5e9cd4f8ea0b3bf8fe2fd1961
msgid ""
"`Sublime Text`_: Windows, Mac & Linux. A great all around editor that's "
"easy to use. It's Ctl+B shortcut lets you run the python file you're "
"working on straight away."
msgstr ""

#: ../../source/getting_started.rst:46 b8fbc9bde63a42fbad7f912a37f0d301
msgid ""
"`Geany`_: Windows, Mac & Linux. A simple editor that doesn't aim to be "
"too complicated."
msgstr ""

#: ../../source/getting_started.rst:49 8c1ac26034284edd84ee007c2b0a1eb6
msgid ""
"`TextMate`_: Mac. One of the most famous code editors for Mac, it used to"
" be a paid product but has since been open-sourced."
msgstr ""

#: ../../source/getting_started.rst:52 aae07756e8604b13a09bb7347b555291
msgid ""
"`Gedit`_ and `Kate`_: Linux. If you run Linux using Gnome or KDE "
"respectively, you might already have one of these two installed!"
msgstr ""

#: ../../source/getting_started.rst:55 fd1507758a1b44c69ed27eb76bac621a
msgid ""
"`Komodo Edit`_: Windows, Mac & Linux. a sleak, free editor based on the "
"more powerful Komodo IDE."
msgstr ""

#: ../../source/getting_started.rst:66 7b009829337248e28fbb96063ae1ac92
msgid "If you'd like our recommendation, try out Sublime Text 3 first."
msgstr ""

#: ../../source/getting_started.rst:70 d4bd487675d542679befe7ebbe140f2b
msgid "Wordpad, TextEdit, Notepad, and Word are **not** suitable code editors."
msgstr ""

#: ../../source/getting_started.rst:73 1a2bd427d22d4e1790d022bb70abb11a
msgid "What is Python, exactly?"
msgstr ""

#: ../../source/getting_started.rst:75 8487f2d7b7684893a00b5ba7398e28d9
msgid ""
"Ok, so python is this thing called a **programming language**. It takes "
"text that you've written (usually referred to as **code**), turns it into"
" instructions for your computer, and runs those instructions. We'll be "
"learning how to write code to do cool and useful stuff. No longer will "
"you be bound to use *others'* programs to do things with your computer - "
"you can make your own!"
msgstr ""

#: ../../source/getting_started.rst:81 7c7f8d07a1cf4365a3196e1697e4c103
msgid ""
"Practically, Python is just another program on your computer. The first "
"thing to learn is how to use and interact with it. There are in fact many"
" ways to do this; the first one to learn is to interact with python's "
"interpreter, using your **operating system's** (OS) console."
msgstr ""

#: ../../source/getting_started.rst:86 2146b265885240f68db1bca5f63fff10
msgid ""
"A **console** (or 'terminal', or 'command prompt') is a *textual* way to "
"interact with your OS, just as the 'desktop', in conjunction with your "
"mouse, is the *graphical* way to interact your system."
msgstr ""

#: ../../source/getting_started.rst:91 00a41587a48c4b4483ab5484300e9e04
msgid "Opening a console on Mac OS X"
msgstr ""

#: ../../source/getting_started.rst:93 3d36f2e2c0734177ada77c1bc21e8cae
msgid ""
"OS X's standard console is a program called :program:`Terminal`. Open "
"Terminal by navigating to Applications, then Utilities, then double-click"
" the :program:`Terminal` program. You can also easily search for it in "
"the system search tool in the top right."
msgstr ""

#: ../../source/getting_started.rst:98 9a1387fa5ee0435495314cec1d70f86a
msgid ""
"The command line Terminal is a tool for interacting with your computer. A"
" window will open with a command line prompt message, something like "
"this::"
msgstr ""

#: ../../source/getting_started.rst:105 6dc3e2105dbb42189cff28c7acfa1065
msgid "Opening a console on Linux"
msgstr ""

#: ../../source/getting_started.rst:107 f8ce525202ca40ce8894bb38f7d09f29
msgid ""
"Different linux distributions (e.g Ubuntu, Fedora, Mint) may have "
"different console programs, usually referred to as a terminal. The exact "
"terminal you start up, and how, can depend on your distribution. On "
"Ubuntu, you will likely want to open :program:`Gnome Terminal`. It should"
" present a prompt like this::"
msgstr ""

#: ../../source/getting_started.rst:115 0f4b847d990249afb5cfc916b65218f0
msgid "Opening a console on Windows"
msgstr ""

#: ../../source/getting_started.rst:117 5ac8f0d797d44c66a611e15cea8be152
msgid ""
"Window's console is called the Command Prompt, named :program:`cmd`.  An "
"easy way to get to it is by using the key combination :kbd:`Windows+R` "
"(:kbd:`Windows` meaning the windows logo button), which should open a "
":guilabel:`Run` dialog.  Then type :program:`cmd` and hit :kbd:`Enter` or"
" click :guilabel:`Ok`. You can also search for it from the start menu. It"
" should look like::"
msgstr ""

#: ../../source/getting_started.rst:126 3d4f9de8aec64a16bc06844d7e497bc6
msgid ""
"Window's Command Prompt is not quite as powerful as its counterparts on "
"Linux and OS X, so you might like to start the Python Interpreter (see "
"just below) directly, or using the :program:`IDLE` program that Python "
"comes with. You can find these in the Start menu."
msgstr ""

#: ../../source/getting_started.rst:132 84330b20493c499488b4686dba30889d
msgid "Using Python"
msgstr ""

#: ../../source/getting_started.rst:134 f5e89943fc0e4f45bfdc6c7b806966d1
msgid ""
"The python program that you have installed will by default act as "
"something called an **interpreter**. An interpreter takes text commands "
"and runs them as you enter them - very handy for trying things out."
msgstr ""

#: ../../source/getting_started.rst:138 1b61e57db17c44a79f33ecd743366f8e
msgid ""
"Just type :program:`python` at your console, hit :kbd:`Enter`, and you "
"should enter Python's Interpreter."
msgstr ""

#: ../../source/getting_started.rst:141 bc16498a085941fe8e6332c0ac8b755a
msgid ""
"To find out which version of python you're running, instead type  "
"``python -V`` in your console to tell you."
msgstr ""

#: ../../source/getting_started.rst:145 76b4062bc6ee41bebad551f895e69baf
msgid "Interacting With Python"
msgstr ""

#: ../../source/getting_started.rst:147 198c0895838d45d7906498174b21f198
msgid ""
"After Python opens, it will show you some contextual information similar "
"to this::"
msgstr ""

#: ../../source/getting_started.rst:156 de76c63f8d524e459b2d328b74dbad83
msgid ""
"The prompt **>>>** on the last line indicates that you are now in an "
"interactive Python interpeter session, also called the \"Python shell\". "
"**This is different from the normal terminal command prompt!**"
msgstr ""

#: ../../source/getting_started.rst:160 ff92469d53f34ed6b359b8a8c163db12
msgid "You can now enter some code for python to run. Try::"
msgstr ""

#: ../../source/getting_started.rst:164 f2cb6fe3710c4e4abce7b786503d0763
msgid ""
"Press :kbd:`Enter` and see what happens. After showing the results, "
"Python will bring you back to the interactive prompt, where you could "
"enter another command:"
msgstr ""

#: ../../source/getting_started.rst:173 4553a6ff32644505b7ca4edcc94f44ea
msgid ""
"An extremely useful command is ``help()``, which enters a help "
"functionality to explore all the stuff python lets you do, right from the"
" interpreter. Press :kbd:`q` to close the help window and return to the "
"Python prompt."
msgstr ""

#: ../../source/getting_started.rst:177 cc6c20b8c0b4495d8fc7b16a1e5473dd
msgid ""
"To leave the interactive shell and go back to the console (the *system* "
"shell), press :kbd:`Ctrl-Z` and then :kbd:`Enter` on Windows, or "
":kbd:`Ctrl-D` on OS X or Linux. Alternatively, you could also run the "
"python command ``exit()``!"
msgstr ""

#: ../../source/getting_started.rst:183 de614180143f4429ae64c75d850a4813
msgid "Exercise"
msgstr ""

#: ../../source/getting_started.rst:185 bf08397ed9f94a509a6602c7a1dae787
msgid ""
"Just above we demonstrated entering a command to figure out some math. "
"Try some math commands of your own! What operations does python know? Get"
" it to tell you what 239 and 588 added together, and then squared is."
msgstr ""

#: ../../source/getting_started.rst:192 bc9ef3fae956452a92ee74514d03fa7c
msgid "Solution"
msgstr ""

#: ../../source/getting_started.rst:194 25d06e0e33e74e609fde16c01ab42052
msgid "Here are  some ways you might have got the answer:"
msgstr ""

#: ../../source/getting_started.rst:209 1cd972005d144d9b8113f97f34195258
msgid "Running Python files"
msgstr ""

#: ../../source/getting_started.rst:211 2c641140f88c4a0c8bae282a4cdbc417
msgid ""
"When you have a lot of python code to run, you will want to save it into "
"a file, so for instance, you can modify small parts of it (fix a bug) and"
" re-run the code without having to repeatedly re-type the rest. Instead "
"of typing commands in one-by-one you can save your code to a file and "
"pass the file name to the :program:`python` program. It will execute that"
" file's code instead of launching its interactive interpreter."
msgstr ""

#: ../../source/getting_started.rst:219 1f2ee63bf4f041faac50445710626778
msgid ""
"**Let's try that!**  Create a file :file:`hello.py` in your current "
"directory with your favorite code editor and write the print command from"
" above.  Now save that file. On Linux or OS X, you can also run ``touch "
"hello.py`` to create an empty file to edit. To run this file with python,"
" it's pretty easy:"
msgstr ""

#: ../../source/getting_started.rst:230 10460c2c509543c3958cfb23f5afe553
msgid ""
"Make sure you are at your system command prompt, which will have ``$`` or"
" ``>`` at the end, **not** at python's (which has ``>>>`` instead)!"
msgstr ""

#: ../../source/getting_started.rst:233 a039b600e2204d6e97a0a4f8acf24e7d
msgid ""
"On Windows you should also be able to double-click the Python file to run"
" it."
msgstr ""

#: ../../source/getting_started.rst:235 feeb4bd5d9eb4e97a2f1ea01798c0a2b
msgid ""
"When pressing :kbd:`Enter` now, the file is executed and you see the "
"output as before.  But this time, after Python finished executing all "
"commands from that file it exits back to the system command prompt, "
"instead of going back to the interactive shell."
msgstr ""

#: ../../source/getting_started.rst:240 9f72d01c72ff4cd9908103038d462e96
msgid "And now we are all set and can get started with turtle!"
msgstr ""

#: ../../source/getting_started.rst:244 1570520833294eab80bbb0961911d422
msgid ""
"Not getting \"Hello world\" but some crazy error about \"can't open "
"file\" or \"No such file or directory?\" Your command line might not be "
"running in the directory that you saved the file in. You can change the "
"working directory of your current command line with the :command:`cd` "
"command, which stands for \"change directory\". On Windows, you might "
"want something like::"
msgstr ""

#: ../../source/getting_started.rst:253 a7883e0bd63f41148be8af767581250b
msgid "On Linux or OS X, you might want something like:"
msgstr ""

#: ../../source/getting_started.rst:259 360dfd3c92f7416c8772aabf5aa72e2b
msgid ""
"This changes to the directory Python_Exercises under the Desktop folder "
"(yours might be somewhere different). If you don't know the location of "
"the directory where you saved the file, you can simply drag the directory"
" to the command line window.  If you don't know which directory your "
"shell is currently running in use :command:`pwd`, which stands for "
"\"print working directory\"."
msgstr ""

#: ../../source/getting_started.rst:268 0650ca64d31a443db19bdae85411fcdb
msgid ""
"When playing around with turtle, avoid naming your file :file:`turtle.py`"
" --- rather use more appropriate names such as :file:`square.py` or "
":file:`rectangle.py`.  Otherwise, whenever you refer to ``turtle``, "
"Python will pick up *your* file instead of the standard Python turtle "
"module."
msgstr ""

